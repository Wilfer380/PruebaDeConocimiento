üìù PruebaDeConocimiento
Es una aplicaci√≥n de escritorio desarrollada en WPF con MVVM, que utiliza SQL Server para la gesti√≥n de registros de usuarios. Su dise√±o sigue principios de modularidad y buenas pr√°cticas en el desarrollo de software.

Objetivo del Proyecto
Esta aplicaci√≥n permite el registro y gesti√≥n de usuarios mediante una base de datos SQL Server, asegurando validaciones correctas y una separaci√≥n limpia de la l√≥gica de la interfaz y los datos.

Estructura del Proyecto
El c√≥digo est√° organizado en carpetas para facilitar la escalabilidad y mantenimiento de las mismas en cuanto al orden y estructura de estas:

BD ‚Üí Contiene Bd.cs, responsable de manejar la conexi√≥n y operaciones con SQL Server.
Commands ‚Üí Implementa RelayCommand.cs para gestionar comandos en el patr√≥n MVVM.
Models ‚Üí Define las entidades del sistema.
Resources‚Üí Contiene styles.xaml para un dise√±o unificado en la interfaz.
ViewModels ‚Üí Contiene la l√≥gica de presentaci√≥n.
UserViewModel.cs ‚Üí Maneja la informaci√≥n y validaciones de usuarios.
ViewModelBase.cs ‚Üí Clase base para los ViewModels.
Views ‚Üí Almacena las vistas XAML.
RecordsView.xaml y `RecordsView.xaml.cs` ‚Üí Pantalla para la gesti√≥n de registros.
App.xaml ‚Üí Configuraci√≥n global de la aplicaci√≥n.
MainWindow.xaml y `MainWindow.xaml.cs` ‚Üí Definen la ventana principal de la aplicaci√≥n.

 üõ† Requisitos Previos
Para desarrollar y ejecutar el proyecto correctamente, aseg√∫rate de contar con:
1. Visual Studio 2022 (con carga de trabajo para desarrollo de escritorio en .NET)
2. SQL Server (versi√≥n 2017 o superior)
3. Administrador de paquetes NuGet para instalar dependencias

üì• Instalaci√≥n y Configuraci√≥n
1. Instalar Visual Studio 2022 
   Desc√°rgalo desde [Visual Studio](https://visualstudio.microsoft.com/es/)  
   Selecciona la opci√≥n .NET Desktop Development durante la instalaci√≥n.

2. Clonacion de proyecto en otra computadora mediante el siguiente enlace:
   git clone https://github.com/tu_usuario/PruebaDeConocimiento.git

3. Instalar dependencias desde NuGet:
   Install-Package System.Data.SqlClient -Version 4.9.0

4. Configurar SQL Server
Crear la base de datos para el proyecto PruebaDeConocimiento
Crear base de datos llamada BDUSERS
Ejecutar el siguiente script SQL para crear la tabla de usuarios:

CREATE TABLE Usuarios (
    ID INT PRIMARY KEY IDENTITY(1,1),
    Nombre VARCHAR(100) NOT NULL,
    Apellido VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    Telefono VARCHAR(100) NOT NULL,
    Contrase√±a VARCHAR(255) NOT NULL
);

5. Configurar la conexi√≥n a SQL Server en App.config:
<connectionStrings>
    <add name="Conexion" connectionString="Server=TU_SERVIDOR;Database=PruebaDeConocimiento;User Id=TU_USUARIO;lastname=TU_APELLIDO;email=TU_CORREO;telefono=TU_telefono;Password=TU_CONTRASE√ëA;" providerName="System.Data.SqlClient"/>
</connectionStrings>

6. Ejecuta el proyecto cuando instales todo lo necesario para que el trabajo funcione correctamente.

7. üíª Tecnolog√≠as Utilizadas
Lenguaje: C#
Framework: WPF
Patr√≥n de Dise√±o: MVVM
Base base de Datos: SQL Server
Herramienta edicion de codigo:Visual Studio 2022


8. Conclusion
Este proyecto esta hecho para agregar y almacenar datos de usuarios con sus respectivos credenciales a la base de datos, cabe resaltar, que asi como agrega datos, tambien se puede editar y eliminar ciertos datos que son insertados desde la interfaz grafica.


